name: Add Issue to Project on Comment

on:
  issue_comment:
    types: [created]

jobs:
  add-issue-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event Data
        run: |
          echo "Comment body: ${{ github.event.comment.body }}"
          echo "Issue node_id: ${{ github.event.issue.node_id }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"

      - name: Check for Best/Worst case dates
        id: check_comment
        run: |
          body="${{ github.event.comment.body }}"
          if [[ "$body" == *"Best case"* && "$body" == *"Worst case"* ]]; then
            echo "::set-output name=add_to_project::true"
          else
            echo "::set-output name=add_to_project::false"
          fi

      - name: Get Project ID from URL
        id: get_project_id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          project_url="https://github.com/users/ShanChathusanda93/projects/2"
          project_number="2"
          owner="ShanChathusanda93"
          project_id=$(gh api graphql -f query='query { user(login: "'$owner'") { projectV2(number: '$project_number') { id } } }' --jq '.data.user.projectV2.id')
          echo "project_id=$project_id" >> $GITHUB_OUTPUT

      - name: Add issue to GitHub Project
        if: steps.check_comment.outputs.add_to_project == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          issue_id=${{ github.event.issue.node_id }}
          project_id=${{ steps.get_project_id.outputs.project_id }}
          gh api graphql -F issueId=$issue_id -F projectId=$project_id -f query='mutation($issueId:ID!, $projectId:ID!) { addProjectV2ItemById(input: {projectId: $project_id, contentId: $issue_id}) { item { id } } }'